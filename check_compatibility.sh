#!/bin/bash

# Script ki·ªÉm tra t∆∞∆°ng th√≠ch Mac v·ªõi iOS 18.6
echo "üîç Ki·ªÉm tra t∆∞∆°ng th√≠ch Mac v·ªõi iOS 18.6..."
echo ""

# L·∫•y th√¥ng tin h·ªá th·ªëng
MACOS_VERSION=$(sw_vers -productVersion)
MODEL_NAME=$(system_profiler SPHardwareDataType | grep "Model Name" | awk -F': ' '{print $2}' | xargs)
MODEL_ID=$(system_profiler SPHardwareDataType | grep "Model Identifier" | awk -F': ' '{print $2}' | xargs)
CHIP_INFO=$(system_profiler SPHardwareDataType | grep "Chip\|Processor Name" | awk -F': ' '{print $2}' | xargs)
MEMORY=$(system_profiler SPHardwareDataType | grep "Memory" | awk -F': ' '{print $2}' | xargs)

echo "üì± Th√¥ng tin Mac hi·ªán t·∫°i:"
echo "   Model: $MODEL_NAME"
echo "   Identifier: $MODEL_ID"
echo "   Chip: $CHIP_INFO"
echo "   RAM: $MEMORY"
echo "   macOS: $MACOS_VERSION"
echo ""

# Ki·ªÉm tra Xcode hi·ªán t·∫°i
if command -v xcodebuild &> /dev/null; then
    XCODE_VERSION=$(xcodebuild -version | head -n1 | awk '{print $2}')
    echo "üõ†Ô∏è Xcode hi·ªán t·∫°i: $XCODE_VERSION"
else
    echo "üõ†Ô∏è Xcode: Ch∆∞a c√†i ƒë·∫∑t"
fi

# Ki·ªÉm tra Flutter hi·ªán t·∫°i
if command -v flutter &> /dev/null; then
    FLUTTER_VERSION=$(flutter --version | head -n1 | awk '{print $2}')
    echo "üì¶ Flutter hi·ªán t·∫°i: $FLUTTER_VERSION"
else
    echo "üì¶ Flutter: Ch∆∞a c√†i ƒë·∫∑t"
fi

echo ""
echo "üéØ Y√™u c·∫ßu cho iOS 18.6:"
echo "   macOS: 14.0+ (Sonoma)"
echo "   Xcode: 16.0+"
echo "   Flutter: 3.24+"
echo ""

# Ki·ªÉm tra t∆∞∆°ng th√≠ch macOS 14.0
echo "üîç Ki·ªÉm tra t∆∞∆°ng th√≠ch macOS 14.0..."

# Danh s√°ch Mac models h·ªó tr·ª£ macOS 14.0
SUPPORTED_MODELS=(
    "MacBookAir10,1"    # MacBook Air M1 2020
    "Mac13,1"           # MacBook Air M2 2022
    "Mac13,2"           # MacBook Air M2 2022
    "Mac14,2"           # MacBook Air M2 2023
    "Mac15,12"          # MacBook Air M3 2024
    "Mac15,13"          # MacBook Air M3 2024
    "MacBookPro16,1"    # MacBook Pro 16" 2019
    "MacBookPro16,2"    # MacBook Pro 13" 2020
    "MacBookPro16,3"    # MacBook Pro 13" 2020
    "MacBookPro16,4"    # MacBook Pro 16" 2019
    "MacBookPro17,1"    # MacBook Pro 13" M1 2020
    "MacBookPro18,1"    # MacBook Pro 16" M1 2021
    "MacBookPro18,2"    # MacBook Pro 16" M1 2021
    "MacBookPro18,3"    # MacBook Pro 14" M1 2021
    "MacBookPro18,4"    # MacBook Pro 14" M1 2021
    "Mac14,5"           # MacBook Pro 14" M2 2023
    "Mac14,6"           # MacBook Pro 16" M2 2023
    "Mac14,7"           # MacBook Pro 13" M2 2022
    "Mac14,9"           # MacBook Pro 14" M2 2023
    "Mac14,10"          # MacBook Pro 16" M2 2023
    "Mac15,3"           # MacBook Pro 14" M3 2023
    "Mac15,6"           # MacBook Pro 16" M3 2023
    "Mac15,7"           # MacBook Pro 14" M3 2024
    "Mac15,8"           # MacBook Pro 16" M3 2024
    "Mac15,9"           # MacBook Pro 14" M3 2024
    "Mac15,10"          # MacBook Pro 16" M3 2024
    "Mac15,11"          # MacBook Pro 14" M3 2024
    "iMac20,1"          # iMac 27" 2020
    "iMac20,2"          # iMac 27" 2020
    "iMac21,1"          # iMac 24" M1 2021
    "iMac21,2"          # iMac 24" M1 2021
    "Mac15,4"           # iMac 24" M3 2023
    "Mac15,5"           # iMac 24" M3 2023
    "iMacPro1,1"        # iMac Pro 2017
    "Macmini8,1"        # Mac mini 2018
    "Macmini9,1"        # Mac mini M1 2020
    "Mac14,3"           # Mac mini M2 2023
    "Mac14,12"          # Mac mini M2 Pro 2023
    "Mac13,1"           # Mac Studio M1 Max 2022
    "Mac13,2"           # Mac Studio M1 Ultra 2022
    "Mac14,13"          # Mac Studio M2 Max 2023
    "Mac14,14"          # Mac Studio M2 Ultra 2023
    "MacPro7,1"         # Mac Pro 2019
    "Mac14,8"           # Mac Pro M2 Ultra 2023
)

# Ki·ªÉm tra model c√≥ trong danh s√°ch h·ªó tr·ª£ kh√¥ng
SUPPORTED=false
for model in "${SUPPORTED_MODELS[@]}"; do
    if [[ "$MODEL_ID" == "$model" ]]; then
        SUPPORTED=true
        break
    fi
done

# Ki·ªÉm tra theo nƒÉm cho Intel Macs
if [[ "$CHIP_INFO" == *"Intel"* ]]; then
    # Ki·ªÉm tra MacBook Pro Intel
    if [[ "$MODEL_ID" == MacBookPro* ]]; then
        YEAR=$(echo $MODEL_ID | grep -o '[0-9]\+' | head -1)
        if [[ $YEAR -ge 16 ]]; then  # MacBookPro16,x = 2019+
            SUPPORTED=true
        fi
    fi
    
    # Ki·ªÉm tra iMac Intel
    if [[ "$MODEL_ID" == iMac* ]]; then
        YEAR=$(echo $MODEL_ID | grep -o '[0-9]\+' | head -1)
        if [[ $YEAR -ge 20 ]]; then  # iMac20,x = 2020+
            SUPPORTED=true
        fi
    fi
fi

echo ""
if [ "$SUPPORTED" = true ]; then
    echo "‚úÖ MAC C·ª¶A B·∫†N H·ªñ TR·ª¢ macOS 14.0+"
    echo ""
    echo "üöÄ B·∫°n c√≥ th·ªÉ upgrade ƒë·ªÉ h·ªó tr·ª£ iOS 18.6:"
    echo "   1. Upgrade macOS l√™n 14.0+ Sonoma"
    echo "   2. C√†i ƒë·∫∑t Xcode 16.0+"
    echo "   3. Update Flutter l√™n 3.24+"
    echo "   4. Build cho iPhone iOS 18.6"
    echo ""
    echo "üìã C√°c b∆∞·ªõc ti·∫øp theo:"
    echo "   - ƒê·ªçc UPGRADE_GUIDE.md ƒë·ªÉ upgrade"
    echo "   - Backup d·ªØ li·ªáu tr∆∞·ªõc khi upgrade"
    echo "   - Ki·ªÉm tra dung l∆∞·ª£ng disk (c·∫ßn 50GB+)"
    
    # Ki·ªÉm tra dung l∆∞·ª£ng disk
    AVAILABLE_GB=$(df -h / | awk 'NR==2{print $4}' | sed 's/Gi//')
    echo "   - Dung l∆∞·ª£ng available: $(df -h / | awk 'NR==2{print $4}')"
    
else
    echo "‚ùå MAC C·ª¶A B·∫†N KH√îNG H·ªñ TR·ª¢ macOS 14.0+"
    echo ""
    echo "üîÑ Gi·∫£i ph√°p thay th·∫ø:"
    echo "   1. S·ª≠ d·ª•ng GitHub Actions (mi·ªÖn ph√≠)"
    echo "   2. S·ª≠ d·ª•ng Codemagic CI/CD"
    echo "   3. Thu√™ d·ªãch v·ª• Remote Mac"
    echo "   4. Mua Mac m·ªõi (Mac mini M2: ~$599)"
    echo "   5. Test tr√™n iPhone iOS c≈© h∆°n"
    echo ""
    echo "üìã Khuy·∫øn ngh·ªã:"
    echo "   - ƒê·ªçc iOS_18_COMPATIBILITY.md"
    echo "   - C√¢n nh·∫Øc upgrade hardware"
    echo "   - S·ª≠ d·ª•ng CI/CD cho development"
fi

echo ""
echo "üìö T√†i li·ªáu tham kh·∫£o:"
echo "   - iOS_18_COMPATIBILITY.md: Chi ti·∫øt t∆∞∆°ng th√≠ch"
echo "   - UPGRADE_GUIDE.md: H∆∞·ªõng d·∫´n upgrade"
echo "   - APPLE_DEVELOPER_GUIDE.md: V·ªÅ Apple Developer Account"
